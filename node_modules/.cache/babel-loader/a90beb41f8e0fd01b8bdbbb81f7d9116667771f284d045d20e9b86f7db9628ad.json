{"ast":null,"code":"var _jsxFileName = \"/Users/vadimvolodin/Downloads/ScanSkillfactory-main/src/components/Header/UserBlock/UserBlock.jsx\",\n  _s = $RefreshSig$();\n// UserBlock.jsx\n/**\n * UserBlock Component.\n * This component serves as a container for user-related components and actions.\n * It conditionally renders the UserActions or UserInfo components based on the\n * current state of the application, such as whether the user is logged in,\n * whether the app is in mobile view, and whether the menu is visible.\n * It also handles user data fetching simulation and name formatting.\n *\n * @param {boolean} isLoggedIn - Flag indicating whether the user is logged in.\n * @param {string} userName - The name of the logged-in user.\n * @param {string} userPicture - The URL of the user's profile picture.\n * @param {Function} setUserName - Function to set the user's name.\n * @param {Function} setUserPicture - Function to set the user's profile picture.\n * @param {boolean} isMobile - Flag indicating whether the app is in mobile view.\n * @param {boolean} isMenuVisible - Flag indicating whether the mobile menu is visible.\n * @returns {JSX.Element} The UserBlock component with user actions or information.\n */\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport UserActions from './UserActions/UserActions';\nimport UserInfo from './UserInfo/UserInfo';\nimport UserPictureExample from '../../../assets/user_pic_example.png';\nimport styles from './UserBlock.module.scss';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserBlock = ({\n  isLoggedIn,\n  userName,\n  userPicture,\n  setUserName,\n  setUserPicture,\n  isMobile,\n  isMenuVisible\n}) => {\n  _s();\n  const [isLoadingActions, setIsLoadingActions] = useState(true);\n  const navigate = useNavigate();\n  const handleLoginClick = () => {\n    navigate('/auth');\n  };\n  useEffect(() => {\n    setIsLoadingActions(true);\n    setTimeout(() => {\n      const userData = {\n        name: 'Александр Алексеев',\n        picture: UserPictureExample\n      };\n      setUserName(formatName(userData.name));\n      setUserPicture(userData.picture);\n      setIsLoadingActions(false);\n    }, 2000);\n  }, []);\n  function formatName(fullName) {\n    const parts = fullName.split(' ');\n    if (parts.length > 1) {\n      return `${parts[0]} ${parts[1].charAt(0)}.`;\n    }\n    return fullName;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.userBlocks,\n    children: [isMobile && isLoggedIn && !isMenuVisible && /*#__PURE__*/_jsxDEV(UserActions, {\n      isLoading: isLoadingActions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), isMobile && isLoggedIn && isMenuVisible && /*#__PURE__*/_jsxDEV(UserInfo, {\n      userName: userName,\n      userPicture: userPicture,\n      isLoading: isLoadingActions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), !isMobile && isLoggedIn && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(UserActions, {\n        isLoading: isLoadingActions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(UserInfo, {\n        userName: userName,\n        userPicture: userPicture,\n        isLoading: isLoadingActions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(UserBlock, \"y1m17EUEfO9V77RgsHI/u3jBPRU=\", false, function () {\n  return [useNavigate];\n});\n_c = UserBlock;\nexport default UserBlock;\nvar _c;\n$RefreshReg$(_c, \"UserBlock\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","UserActions","UserInfo","UserPictureExample","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","UserBlock","isLoggedIn","userName","userPicture","setUserName","setUserPicture","isMobile","isMenuVisible","_s","isLoadingActions","setIsLoadingActions","navigate","handleLoginClick","setTimeout","userData","name","picture","formatName","fullName","parts","split","length","charAt","className","userBlocks","children","isLoading","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vadimvolodin/Downloads/ScanSkillfactory-main/src/components/Header/UserBlock/UserBlock.jsx"],"sourcesContent":["// UserBlock.jsx\n/**\n * UserBlock Component.\n * This component serves as a container for user-related components and actions.\n * It conditionally renders the UserActions or UserInfo components based on the\n * current state of the application, such as whether the user is logged in,\n * whether the app is in mobile view, and whether the menu is visible.\n * It also handles user data fetching simulation and name formatting.\n *\n * @param {boolean} isLoggedIn - Flag indicating whether the user is logged in.\n * @param {string} userName - The name of the logged-in user.\n * @param {string} userPicture - The URL of the user's profile picture.\n * @param {Function} setUserName - Function to set the user's name.\n * @param {Function} setUserPicture - Function to set the user's profile picture.\n * @param {boolean} isMobile - Flag indicating whether the app is in mobile view.\n * @param {boolean} isMenuVisible - Flag indicating whether the mobile menu is visible.\n * @returns {JSX.Element} The UserBlock component with user actions or information.\n */\nimport React, {useEffect, useState} from 'react';\nimport {useNavigate} from 'react-router-dom';\n\nimport UserActions from './UserActions/UserActions';\nimport UserInfo from './UserInfo/UserInfo';\n\nimport UserPictureExample from '../../../assets/user_pic_example.png';\nimport styles from './UserBlock.module.scss';\n\nconst UserBlock = ({isLoggedIn, userName, userPicture, setUserName, setUserPicture, isMobile, isMenuVisible}) => {\n  const [isLoadingActions, setIsLoadingActions] = useState(true);\n  const navigate = useNavigate();\n\n  const handleLoginClick = () => {\n    navigate('/auth');\n  };\n\n  useEffect(() => {\n    setIsLoadingActions(true);\n    setTimeout(() => {\n      const userData = {\n        name: 'Александр Алексеев',\n        picture: UserPictureExample\n      };\n      setUserName(formatName(userData.name));\n      setUserPicture(userData.picture);\n      setIsLoadingActions(false);\n    }, 2000);\n  }, []);\n\n  function formatName(fullName) {\n    const parts = fullName.split(' ');\n    if (parts.length > 1) {\n      return `${parts[0]} ${parts[1].charAt(0)}.`;\n    }\n    return fullName;\n  }\n\n  return (\n    <div className={styles.userBlocks}>\n\n      {isMobile && isLoggedIn && !isMenuVisible && (\n        <UserActions isLoading={isLoadingActions}/>\n      )}\n\n      {isMobile && isLoggedIn && isMenuVisible && (\n        <UserInfo\n          userName={userName}\n          userPicture={userPicture}\n          isLoading={isLoadingActions}\n        />\n      )}\n\n      {!isMobile && isLoggedIn && (\n        <>\n          <UserActions isLoading={isLoadingActions}/>\n          <UserInfo userName={userName} userPicture={userPicture} isLoading={isLoadingActions}/>\n        </>\n      )}\n\n    </div>\n  );\n};\n\nexport default UserBlock;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}