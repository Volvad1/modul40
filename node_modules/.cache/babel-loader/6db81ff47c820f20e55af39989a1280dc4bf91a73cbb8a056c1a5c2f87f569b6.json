{"ast":null,"code":"var _jsxFileName = \"/Users/vadimvolodin/Downloads/ScanSkillfactory-main/src/pages/ResultsPage/ArticleCards/ArticleCards.jsx\",\n  _s = $RefreshSig$();\n// ArticleCards.jsx\n/**\n * ArticleCards Component.\n * This component is responsible for displaying a list of ArticleCard components.\n * It receives an array of article data, transforms it into ArticleCard props,\n * and manages the number of displayed articles with a \"Show More\" button.\n *\n * @param {Array} documentsData - The array of article data to be displayed.\n * @returns {JSX.Element} The ArticleCards component with a list of articles.\n */\nimport React, { useEffect, useState } from 'react';\nimport ArticleCard from '../ArticleCard/ArticleCard';\nimport styles from \"./ArticleCards.module.scss\";\nimport MockArticle from '../../../assets/mock_1_picture.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ArticleCards({\n  documentsData\n}) {\n  _s();\n  const [articles, setArticles] = useState([]);\n  const [displayedArticles, setDisplayedArticles] = useState(2);\n\n  // Effect to transform the incoming documents data into article cards\n  useEffect(() => {\n    if (documentsData && Array.isArray(documentsData)) {\n      const transformedArticles = documentsData.map(doc => {\n        const {\n          issueDate,\n          url,\n          source,\n          attributes,\n          title,\n          content\n        } = doc.ok;\n        const {\n          name\n        } = source;\n        const {\n          isTechNews,\n          isAnnouncement,\n          isDigest,\n          wordCount\n        } = attributes;\n        return {\n          date: new Date(issueDate).toLocaleDateString(\"ru-RU\"),\n          url,\n          sourceName: name,\n          isTechNews,\n          isAnnouncement,\n          isDigest,\n          title: title.text,\n          content: content.markup,\n          wordCount,\n          picture: MockArticle // Placeholder image\n        };\n      });\n      setArticles(transformedArticles);\n    }\n  }, [documentsData]);\n\n  // Function to show more articles when the button is clicked\n  const showMoreArticles = () => {\n    setDisplayedArticles(prev => prev + 2);\n  };\n\n  // Render the ArticleCards component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.articleCardsBlock,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.articleCards__h2,\n      children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0434\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u043E\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.articleCards,\n      children: articles.slice(0, displayedArticles) // Show only a subset of articles based on displayedArticles state\n      .map((article, index) => /*#__PURE__*/_jsxDEV(ArticleCard, {\n        ...article\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), displayedArticles < articles.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.buttonDiv,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.showMore,\n        onClick: showMoreArticles,\n        children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0431\\u043E\\u043B\\u044C\\u0448\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(ArticleCards, \"NYdYg5/jFEikHegaw3KMVP6v5QU=\");\n_c = ArticleCards;\nexport default ArticleCards;\nvar _c;\n$RefreshReg$(_c, \"ArticleCards\");","map":{"version":3,"names":["React","useEffect","useState","ArticleCard","styles","MockArticle","jsxDEV","_jsxDEV","ArticleCards","documentsData","_s","articles","setArticles","displayedArticles","setDisplayedArticles","Array","isArray","transformedArticles","map","doc","issueDate","url","source","attributes","title","content","ok","name","isTechNews","isAnnouncement","isDigest","wordCount","date","Date","toLocaleDateString","sourceName","text","markup","picture","showMoreArticles","prev","className","articleCardsBlock","children","articleCards__h2","fileName","_jsxFileName","lineNumber","columnNumber","articleCards","slice","article","index","length","buttonDiv","showMore","onClick","_c","$RefreshReg$"],"sources":["/Users/vadimvolodin/Downloads/ScanSkillfactory-main/src/pages/ResultsPage/ArticleCards/ArticleCards.jsx"],"sourcesContent":["// ArticleCards.jsx\n/**\n * ArticleCards Component.\n * This component is responsible for displaying a list of ArticleCard components.\n * It receives an array of article data, transforms it into ArticleCard props,\n * and manages the number of displayed articles with a \"Show More\" button.\n *\n * @param {Array} documentsData - The array of article data to be displayed.\n * @returns {JSX.Element} The ArticleCards component with a list of articles.\n */\nimport React, {useEffect, useState} from 'react';\nimport ArticleCard from '../ArticleCard/ArticleCard';\nimport styles from \"./ArticleCards.module.scss\";\nimport MockArticle from '../../../assets/mock_1_picture.png';\n\nfunction ArticleCards({documentsData}) {\n  const [articles, setArticles] = useState([]);\n  const [displayedArticles, setDisplayedArticles] = useState(2);\n\n  // Effect to transform the incoming documents data into article cards\n  useEffect(() => {\n    if (documentsData && Array.isArray(documentsData)) {\n      const transformedArticles = documentsData.map(doc => {\n        const {issueDate, url, source, attributes, title, content} = doc.ok;\n        const {name} = source;\n        const {isTechNews, isAnnouncement, isDigest, wordCount} = attributes;\n        return {\n          date: new Date(issueDate).toLocaleDateString(\"ru-RU\"),\n          url,\n          sourceName: name,\n          isTechNews,\n          isAnnouncement,\n          isDigest,\n          title: title.text,\n          content: content.markup,\n          wordCount,\n          picture: MockArticle, // Placeholder image\n        };\n      });\n\n      setArticles(transformedArticles);\n    }\n  }, [documentsData]);\n\n  // Function to show more articles when the button is clicked\n  const showMoreArticles = () => {\n    setDisplayedArticles(prev => prev + 2);\n  };\n\n  // Render the ArticleCards component\n  return (\n    <div className={styles.articleCardsBlock}>\n      {/* Title for the articles list */}\n      <h2 className={styles.articleCards__h2}>Список документов</h2>\n      {/* Container for article cards */}\n      <div className={styles.articleCards}>\n        {articles\n          .slice(0, displayedArticles) // Show only a subset of articles based on displayedArticles state\n          .map((article, index) => (\n            <ArticleCard key={index} {...article} />\n          ))}\n      </div>\n      {/* \"Show More\" button to load more articles */}\n      {displayedArticles < articles.length && (\n        <div className={styles.buttonDiv}>\n          <button className={styles.showMore} onClick={showMoreArticles}>\n            Показать больше\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ArticleCards;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}