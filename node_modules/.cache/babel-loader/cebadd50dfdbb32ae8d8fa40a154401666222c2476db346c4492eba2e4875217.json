{"ast":null,"code":"var _jsxFileName = \"/Users/vadimvolodin/Downloads/ScanSkillfactory-main/src/App.jsx\",\n  _s = $RefreshSig$();\n// App.jsx\n/**\n * App Component.\n * This is the root component of the application. It sets up routing and manages the main layout, including the header and footer.\n * The component also handles user authentication status and displays different pages based on whether the user is logged in.\n *\n * @returns {JSX.Element} The root App component with routing and main layout.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Navigate, Route, Routes } from 'react-router-dom';\nimport { useAuth } from \"./hooks/AuthContext\";\nimport Footer from './components/Footer/Footer';\nimport user_pic_example from './assets/user_pic_example.png';\nimport './styles/styles.scss';\nimport './fonts/ferry.otf';\nimport './fonts/InterRegular.ttf';\nimport Authorization from \"./components/Authorization/Authorization\";\nimport Header from \"../src/components/Header/Header\";\nimport Main from \"./pages/Main/Main\";\nimport ResultsPage from \"./pages/ResultsPage/ResultsPage\";\nimport SearchPage from \"./pages/SearchPage/SearchPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Destructure authentication functions from context\n  const {\n    isLoggedIn,\n    checkAuthStatus\n  } = useAuth();\n\n  // State for user tariff\n  const [userTariff, setUserTariff] = useState('beginner');\n\n  // State for user name\n  const [userName, setUserName] = useState('');\n\n  // State for user picture\n  const [userPicture, setUserPicture] = useState(user_pic_example);\n\n  // Log a message if the user is not logged in\n  useEffect(() => {\n    if (!isLoggedIn) {\n      console.log(\"Пользователь не вошёл\");\n    }\n  }, [isLoggedIn]);\n\n  // Check authentication status on component mount\n  useEffect(() => {\n    checkAuthStatus();\n  }, [checkAuthStatus]);\n\n  // Render the App component with routing and main layout\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      isLoggedIn: isLoggedIn,\n      userName: userName,\n      setUserName: setUserName,\n      userPicture: userPicture,\n      setUserPicture: setUserPicture\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Main, {\n          isLoggedIn: isLoggedIn,\n          userTariff: userTariff\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/auth\",\n        element: /*#__PURE__*/_jsxDEV(Authorization, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/search\",\n        element: isLoggedIn ? /*#__PURE__*/_jsxDEV(SearchPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 53\n        }, this) : /*#__PURE__*/_jsxDEV(Authorization, {\n          redirectBack: \"/search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 70\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/results\",\n        element: isLoggedIn ? /*#__PURE__*/_jsxDEV(ResultsPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 54\n        }, this) : /*#__PURE__*/_jsxDEV(Authorization, {\n          redirectBack: \"/results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 72\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/auth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"M3wisy/lChr7iDLWiRa8EnBNSQg=\", false, function () {\n  return [useAuth];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Navigate","Route","Routes","useAuth","Footer","user_pic_example","Authorization","Header","Main","ResultsPage","SearchPage","jsxDEV","_jsxDEV","App","_s","isLoggedIn","checkAuthStatus","userTariff","setUserTariff","userName","setUserName","userPicture","setUserPicture","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","redirectBack","to","_c","$RefreshReg$"],"sources":["/Users/vadimvolodin/Downloads/ScanSkillfactory-main/src/App.jsx"],"sourcesContent":["// App.jsx\n/**\n * App Component.\n * This is the root component of the application. It sets up routing and manages the main layout, including the header and footer.\n * The component also handles user authentication status and displays different pages based on whether the user is logged in.\n *\n * @returns {JSX.Element} The root App component with routing and main layout.\n */\n\nimport React, {useEffect, useState} from 'react';\nimport {BrowserRouter as Router, Navigate, Route, Routes} from 'react-router-dom';\n\nimport {useAuth} from \"./hooks/AuthContext\";\n\nimport Footer from './components/Footer/Footer';\nimport user_pic_example from './assets/user_pic_example.png';\nimport './styles/styles.scss';\n\nimport './fonts/ferry.otf';\nimport './fonts/InterRegular.ttf';\n\nimport Authorization from \"./components/Authorization/Authorization\";\nimport Header from \"../src/components/Header/Header\";\nimport Main from \"./pages/Main/Main\";\nimport ResultsPage from \"./pages/ResultsPage/ResultsPage\";\nimport SearchPage from \"./pages/SearchPage/SearchPage\";\n\nfunction App() {\n  // Destructure authentication functions from context\n  const { isLoggedIn, checkAuthStatus } = useAuth();\n\n  // State for user tariff\n  const [userTariff, setUserTariff] = useState('beginner');\n\n  // State for user name\n  const [userName, setUserName] = useState('');\n\n  // State for user picture\n  const [userPicture, setUserPicture] = useState(user_pic_example);\n\n  // Log a message if the user is not logged in\n  useEffect(() => {\n    if (!isLoggedIn) {\n      console.log(\"Пользователь не вошёл\");\n    }\n  }, [isLoggedIn]);\n\n  // Check authentication status on component mount\n  useEffect(() => {\n    checkAuthStatus();\n  }, [checkAuthStatus]);\n\n  // Render the App component with routing and main layout\n  return (\n    <Router>\n      <Header\n        isLoggedIn={isLoggedIn}\n        userName={userName}\n        setUserName={setUserName}\n        userPicture={userPicture}\n        setUserPicture={setUserPicture}\n      />\n      <Routes>\n        <Route path=\"/\" element={<Main isLoggedIn={isLoggedIn} userTariff={userTariff} />} />\n        <Route path=\"/auth\" element={<Authorization />} />\n        <Route path=\"/search\" element={isLoggedIn ? <SearchPage /> : <Authorization redirectBack=\"/search\" />} />\n        <Route path=\"/results\" element={isLoggedIn ? <ResultsPage /> : <Authorization redirectBack=\"/results\" />} />\n        <Route path=\"*\" element={<Navigate to=\"/auth\" />} />\n      </Routes>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}