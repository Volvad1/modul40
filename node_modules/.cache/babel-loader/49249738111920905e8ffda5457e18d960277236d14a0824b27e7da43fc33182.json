{"ast":null,"code":"var _jsxFileName = \"/Users/vadimvolodin/Downloads/ScanSkillfactory-main/src/pages/SearchPage/CompanyINN/CompanyINN.jsx\",\n  _s = $RefreshSig$();\n// CompanyINN.jsx\n/**\n * CompanyINN Component\n *\n * This component handles the input of a company's INN (Individual Taxpayer Identification Number) in a React application.\n * It provides functionality for input validation and error display.\n *\n * Props:\n *   - companyINN: string - The INN value of the company\n *   - setCompanyINN: function - A function to update the companyINN state\n *\n * State:\n *   - error: string - Holds the error message for input validation\n *\n * useEffect:\n *   - Runs the validation function whenever the companyINN prop changes and updates the error state accordingly.\n *\n * Render:\n *   - Renders a label and an input field for the company's INN.\n *   - The input field is bound to the companyINN state.\n *   - onChange event updates the companyINN state and clears any existing error.\n *   - onBlur event re-validates the input when focus is lost.\n *   - If there's an error, it displays an error message below the input field.\n *\n * Dependencies:\n *   - React: For building the component\n *   - CompanyINN.module.scss: Styles for the component\n *   - validateINN: Utility function for validating the company's INN\n */\nimport React, { useEffect, useState } from 'react';\n// Importing styles\nimport styles from './CompanyINN.module.scss';\n// Importing utility function for INN validation\nimport validateINN from '../../../utils/validateINN';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompanyINN = ({\n  companyINN,\n  setCompanyINN\n}) => {\n  _s();\n  // Component function accepting props\n  const [error, setError] = useState('');\n  // State for holding error message\n\n  useEffect(() => {\n    // Effect for validating INN on prop change\n    const errorMessage = validateINN(companyINN);\n    // Validate INN\n    setError(errorMessage);\n    // Update error state\n  }, [companyINN]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.formField} ${styles.formFieldInputs}`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"companyINN\",\n      children: [\"\\u0418\\u041D\\u041D \\u043A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0438\\u0438\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: error ? `${styles.requiredAsterisk} ${styles.error}` : styles.requiredAsterisk,\n        children: \"*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"companyINN\",\n      name: \"companyINN\"\n      // Apply error styles if there's an error\n      ,\n      className: error ? styles.inputError : '',\n      value: companyINN,\n      onChange: e => {\n        setCompanyINN(e.target.value);\n        // Clear error on input change\n        setError('');\n      }\n      // Re-validate INN on blur\n      ,\n      onBlur: () => setError(validateINN(companyINN)),\n      placeholder: \"10 \\u0446\\u0438\\u0444\\u0440\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.errorMessage,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(CompanyINN, \"AzAS/3yAg/YB9dPSCQtp4rtni54=\");\n_c = CompanyINN;\nexport default CompanyINN;\nvar _c;\n$RefreshReg$(_c, \"CompanyINN\");","map":{"version":3,"names":["React","useEffect","useState","styles","validateINN","jsxDEV","_jsxDEV","CompanyINN","companyINN","setCompanyINN","_s","error","setError","errorMessage","className","formField","formFieldInputs","children","htmlFor","requiredAsterisk","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","inputError","value","onChange","e","target","onBlur","placeholder","_c","$RefreshReg$"],"sources":["/Users/vadimvolodin/Downloads/ScanSkillfactory-main/src/pages/SearchPage/CompanyINN/CompanyINN.jsx"],"sourcesContent":["// CompanyINN.jsx\n/**\n * CompanyINN Component\n *\n * This component handles the input of a company's INN (Individual Taxpayer Identification Number) in a React application.\n * It provides functionality for input validation and error display.\n *\n * Props:\n *   - companyINN: string - The INN value of the company\n *   - setCompanyINN: function - A function to update the companyINN state\n *\n * State:\n *   - error: string - Holds the error message for input validation\n *\n * useEffect:\n *   - Runs the validation function whenever the companyINN prop changes and updates the error state accordingly.\n *\n * Render:\n *   - Renders a label and an input field for the company's INN.\n *   - The input field is bound to the companyINN state.\n *   - onChange event updates the companyINN state and clears any existing error.\n *   - onBlur event re-validates the input when focus is lost.\n *   - If there's an error, it displays an error message below the input field.\n *\n * Dependencies:\n *   - React: For building the component\n *   - CompanyINN.module.scss: Styles for the component\n *   - validateINN: Utility function for validating the company's INN\n */\nimport React, {useEffect, useState} from 'react';\n// Importing styles\nimport styles from './CompanyINN.module.scss';\n// Importing utility function for INN validation\nimport validateINN from '../../../utils/validateINN';\n\nconst CompanyINN = ({ companyINN, setCompanyINN }) => {\n  // Component function accepting props\n  const [error, setError] = useState('');\n  // State for holding error message\n\n  useEffect(() => {\n    // Effect for validating INN on prop change\n    const errorMessage = validateINN(companyINN);\n    // Validate INN\n    setError(errorMessage);\n    // Update error state\n  }, [companyINN]);\n\n  return (\n    <div className={`${styles.formField} ${styles.formFieldInputs}`}>\n      {/* Label for input */}\n      <label htmlFor=\"companyINN\">ИНН компании\n        {/* Display asterisk for required field */}\n        <span className={error ? `${styles.requiredAsterisk} ${styles.error}` : styles.requiredAsterisk}>*</span>\n      </label>\n      <input\n        type=\"text\"\n        id=\"companyINN\"\n        name=\"companyINN\"\n        // Apply error styles if there's an error\n        className={error ? styles.inputError : ''}\n        value={companyINN}\n        onChange={(e) => {\n          setCompanyINN(e.target.value);\n          // Clear error on input change\n          setError('');\n        }}\n        // Re-validate INN on blur\n        onBlur={() => setError(validateINN(companyINN))}\n        placeholder=\"10 цифр\"\n      />\n      {/* Display error message if there's an error */}\n      {error && <div className={styles.errorMessage}>{error}</div>}\n    </div>\n  );\n};\n\nexport default CompanyINN;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD;AACA,OAAOC,MAAM,MAAM,0BAA0B;AAC7C;AACA,OAAOC,WAAW,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,UAAU,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACpD;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC;;EAEAD,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,YAAY,GAAGT,WAAW,CAACI,UAAU,CAAC;IAC5C;IACAI,QAAQ,CAACC,YAAY,CAAC;IACtB;EACF,CAAC,EAAE,CAACL,UAAU,CAAC,CAAC;EAEhB,oBACEF,OAAA;IAAKQ,SAAS,EAAG,GAAEX,MAAM,CAACY,SAAU,IAAGZ,MAAM,CAACa,eAAgB,EAAE;IAAAC,QAAA,gBAE9DX,OAAA;MAAOY,OAAO,EAAC,YAAY;MAAAD,QAAA,GAAC,qEAC1B,eACAX,OAAA;QAAMQ,SAAS,EAAEH,KAAK,GAAI,GAAER,MAAM,CAACgB,gBAAiB,IAAGhB,MAAM,CAACQ,KAAM,EAAC,GAAGR,MAAM,CAACgB,gBAAiB;QAAAF,QAAA,EAAC;MAAC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpG,CAAC,eACRjB,OAAA;MACEkB,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,YAAY;MACfC,IAAI,EAAC;MACL;MAAA;MACAZ,SAAS,EAAEH,KAAK,GAAGR,MAAM,CAACwB,UAAU,GAAG,EAAG;MAC1CC,KAAK,EAAEpB,UAAW;MAClBqB,QAAQ,EAAGC,CAAC,IAAK;QACfrB,aAAa,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;QAC7B;QACAhB,QAAQ,CAAC,EAAE,CAAC;MACd;MACA;MAAA;MACAoB,MAAM,EAAEA,CAAA,KAAMpB,QAAQ,CAACR,WAAW,CAACI,UAAU,CAAC,CAAE;MAChDyB,WAAW,EAAC;IAAS;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,EAEDZ,KAAK,iBAAIL,OAAA;MAAKQ,SAAS,EAAEX,MAAM,CAACU,YAAa;MAAAI,QAAA,EAAEN;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEV,CAAC;AAACb,EAAA,CAxCIH,UAAU;AAAA2B,EAAA,GAAV3B,UAAU;AA0ChB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}