{"ast":null,"code":"// validateINN.js\n/**\n * Utility function to validate a Russian Individual Taxpayer Identification Number (INN).\n * It checks if the INN is not empty, numeric, and has a length of 10 or 12 digits.\n *\n * @param {string} inn - The INN to validate.\n * @returns {string} An error message if validation fails, or an empty string if the INN is valid.\n */\nconst isNumeric = value => /^d+$/.test(value);\nconst isLength10or12 = value => [10, 12].includes(value.length);\nconst validateINN = inn => {\n  if (!inn) {\n    return 'Обязательное поле';\n  }\n  if (!isNumeric(inn)) {\n    return 'Введите корректные данные';\n  }\n  if (!isLength10or12(inn)) {\n    return 'Введите корректные данные';\n  }\n\n  // Additional format check for INN using regular expression\n  const innRegex = /^(d{10}|d{12})$/;\n  if (!innRegex.test(inn)) {\n    return 'Введите корректные данные';\n  }\n\n  // If all checks pass, return an empty error message\n  return '';\n};\nexport default validateINN;","map":{"version":3,"names":["isNumeric","value","test","isLength10or12","includes","length","validateINN","inn","innRegex"],"sources":["/Users/vadimvolodin/Downloads/ScanSkillfactory-main/src/utils/validateINN.js"],"sourcesContent":["// validateINN.js\n/**\n * Utility function to validate a Russian Individual Taxpayer Identification Number (INN).\n * It checks if the INN is not empty, numeric, and has a length of 10 or 12 digits.\n *\n * @param {string} inn - The INN to validate.\n * @returns {string} An error message if validation fails, or an empty string if the INN is valid.\n */\nconst isNumeric = (value) => /^d+$/.test(value);\nconst isLength10or12 = (value) => [10, 12].includes(value.length);\n\nconst validateINN = (inn) => {\n  if (!inn) {\n    return 'Обязательное поле';\n  }\n\n  if (!isNumeric(inn)) {\n    return 'Введите корректные данные';\n  }\n\n  if (!isLength10or12(inn)) {\n    return 'Введите корректные данные';\n  }\n\n  // Additional format check for INN using regular expression\n  const innRegex = /^(d{10}|d{12})$/;\n  if (!innRegex.test(inn)) {\n    return 'Введите корректные данные';\n  }\n\n  // If all checks pass, return an empty error message\n  return '';\n};\n\nexport default validateINN;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,SAAS,GAAIC,KAAK,IAAK,MAAM,CAACC,IAAI,CAACD,KAAK,CAAC;AAC/C,MAAME,cAAc,GAAIF,KAAK,IAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAACG,QAAQ,CAACH,KAAK,CAACI,MAAM,CAAC;AAEjE,MAAMC,WAAW,GAAIC,GAAG,IAAK;EAC3B,IAAI,CAACA,GAAG,EAAE;IACR,OAAO,mBAAmB;EAC5B;EAEA,IAAI,CAACP,SAAS,CAACO,GAAG,CAAC,EAAE;IACnB,OAAO,2BAA2B;EACpC;EAEA,IAAI,CAACJ,cAAc,CAACI,GAAG,CAAC,EAAE;IACxB,OAAO,2BAA2B;EACpC;;EAEA;EACA,MAAMC,QAAQ,GAAG,iBAAiB;EAClC,IAAI,CAACA,QAAQ,CAACN,IAAI,CAACK,GAAG,CAAC,EAAE;IACvB,OAAO,2BAA2B;EACpC;;EAEA;EACA,OAAO,EAAE;AACX,CAAC;AAED,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}