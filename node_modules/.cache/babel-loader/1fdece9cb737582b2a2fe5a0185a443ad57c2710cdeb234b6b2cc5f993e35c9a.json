{"ast":null,"code":"var _jsxFileName = \"/Users/vadimvolodin/Downloads/ScanSkillfactory-main/src/components/Header/UserBlock/UserActions/UserActions.jsx\",\n  _s = $RefreshSig$();\n// UserActions.jsx\n/**\n * UserActions Component.\n * This component is responsible for fetching and displaying the user's company usage data.\n * It shows the number of companies used and the company limit for the user's account.\n * While the data is being fetched, a loading icon is displayed.\n *\n * @returns {JSX.Element} The UserActions component with company usage data or a loading state.\n */\nimport React, { useEffect, useState } from 'react';\nimport Loading from '../../../../assets/loading_icon.svg';\nimport styles from './UserActions.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserActions = () => {\n  _s();\n  // State for the count of used companies\n  const [usedCompanyCount, setUsedCompanyCount] = useState(0);\n  // State for the company limit\n  const [companyLimit, setCompanyLimit] = useState(0);\n  // State to track loading status\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    // Function to fetch company information from the API\n    const fetchCompanyInfo = async () => {\n      setIsLoading(true);\n      const url = 'https://gateway.scan-interfax.ru/api/v1/account/info';\n      try {\n        const response = await fetch(url, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setUsedCompanyCount(data.eventFiltersInfo.usedCompanyCount);\n        setCompanyLimit(data.eventFiltersInfo.companyLimit);\n      } catch (error) {\n        console.error(\"Ошибка при получении информации о компаниях:\", error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    // Fetch company information on component mount\n    fetchCompanyInfo();\n    // Set up an interval to refresh the company information\n    const intervalId = setInterval(fetchCompanyInfo, 50000);\n\n    // Clear the interval when the component is unmounted\n    return () => clearInterval(intervalId);\n  }, []);\n\n  // Render the component with company usage data or a loading state\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.userActions__rectangle,\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: Loading,\n      alt: \"Loading\",\n      className: styles.userActions__loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.userActions__data,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.userActions__numberItem,\n        children: \"\\u0418\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u043D\\u043E \\u043A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0438\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.userActions__usedCompaniesNumber,\n        children: usedCompanyCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.userActions__numberItem,\n        children: \"\\u041B\\u0438\\u043C\\u0438\\u0442 \\u043F\\u043E \\u043A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0438\\u044F\\u043C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.userActions__limitCompaniesNumber,\n        children: companyLimit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(UserActions, \"Dp/U2QYYg4VuHDauHmYAydX8UV4=\");\n_c = UserActions;\nexport default UserActions;\nvar _c;\n$RefreshReg$(_c, \"UserActions\");","map":{"version":3,"names":["React","useEffect","useState","Loading","styles","jsxDEV","_jsxDEV","UserActions","_s","usedCompanyCount","setUsedCompanyCount","companyLimit","setCompanyLimit","isLoading","setIsLoading","fetchCompanyInfo","url","response","fetch","method","headers","localStorage","getItem","ok","Error","status","data","json","eventFiltersInfo","error","console","intervalId","setInterval","clearInterval","className","userActions__rectangle","children","src","alt","userActions__loading","fileName","_jsxFileName","lineNumber","columnNumber","userActions__data","userActions__numberItem","userActions__usedCompaniesNumber","userActions__limitCompaniesNumber","_c","$RefreshReg$"],"sources":["/Users/vadimvolodin/Downloads/ScanSkillfactory-main/src/components/Header/UserBlock/UserActions/UserActions.jsx"],"sourcesContent":["// UserActions.jsx\n/**\n * UserActions Component.\n * This component is responsible for fetching and displaying the user's company usage data.\n * It shows the number of companies used and the company limit for the user's account.\n * While the data is being fetched, a loading icon is displayed.\n *\n * @returns {JSX.Element} The UserActions component with company usage data or a loading state.\n */\nimport React, {useEffect, useState} from 'react';\nimport Loading from '../../../../assets/loading_icon.svg';\nimport styles from './UserActions.module.scss';\n\nconst UserActions = () => {\n  // State for the count of used companies\n  const [usedCompanyCount, setUsedCompanyCount] = useState(0);\n  // State for the company limit\n  const [companyLimit, setCompanyLimit] = useState(0);\n  // State to track loading status\n  const [isLoading, setIsLoading] = useState(false);\n\n\n  useEffect(() => {\n    // Function to fetch company information from the API\n    const fetchCompanyInfo = async () => {\n      setIsLoading(true);\n      const url = 'https://gateway.scan-interfax.ru/api/v1/account/info';\n      try {\n        const response = await fetch(url, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\n          },\n        });\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        setUsedCompanyCount(data.eventFiltersInfo.usedCompanyCount);\n        setCompanyLimit(data.eventFiltersInfo.companyLimit);\n      } catch (error) {\n        console.error(\"Ошибка при получении информации о компаниях:\", error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    // Fetch company information on component mount\n    fetchCompanyInfo();\n    // Set up an interval to refresh the company information\n    const intervalId = setInterval(fetchCompanyInfo, 50000);\n\n    // Clear the interval when the component is unmounted\n    return () => clearInterval(intervalId);\n  }, []);\n\n  // Render the component with company usage data or a loading state\n  return (\n    <div className={styles.userActions__rectangle}>\n      {isLoading ? (\n        <img src={Loading} alt=\"Loading\" className={styles.userActions__loading}/>\n      ) : (\n        <div className={styles.userActions__data}>\n          <div className={styles.userActions__numberItem}>Использовано компаний</div>\n          <div className={styles.userActions__usedCompaniesNumber}>{usedCompanyCount}</div>\n          <div className={styles.userActions__numberItem}>Лимит по компаниям</div>\n          <div className={styles.userActions__limitCompaniesNumber}>{companyLimit}</div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UserActions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}