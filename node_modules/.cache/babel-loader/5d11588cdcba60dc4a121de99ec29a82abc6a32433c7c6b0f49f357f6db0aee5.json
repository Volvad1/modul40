{"ast":null,"code":"var _jsxFileName = \"/Users/vadimvolodin/Downloads/ScanSkillfactory-main/src/pages/ResultsPage/ArticleCard/ArticleCard.jsx\",\n  _s = $RefreshSig$();\n// ArticleCard.jsx\n/**\n * ArticleCard Component.\n * This component is designed to display an article card with relevant information.\n * It shows the article's date, source, title, content snippet, and an image if provided.\n * The card also displays a tag based on the article type and provides a link to read the full article.\n *\n * @param {string} date - The publication date of the article.\n * @param {string} url - The URL to the full article.\n * @param {string} sourceName - The name of the source of the article.\n * @param {boolean} isTechNews - Flag indicating if the article is technical news.\n * @param {boolean} isAnnouncement - Flag indicating if the article is an announcement.\n * @param {boolean} isDigest - Flag indicating if the article is a digest.\n * @param {string} title - The title of the article.\n * @param {string} content - The HTML content of the article.\n * @param {number} wordCount - The word count of the article.\n * @param {string} picture - The URL to the image associated with the article.\n * @returns {JSX.Element} The ArticleCard component with the article's information.\n */\nimport React, { useEffect, useState } from 'react';\nimport styles from './ArticleCard.module.scss';\nimport { cleanHtmlContent } from '../../../utils/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArticleCard = ({\n  date,\n  url,\n  sourceName,\n  isTechNews,\n  isAnnouncement,\n  isDigest,\n  title,\n  content,\n  wordCount,\n  picture\n}) => {\n  _s();\n  const [cleanContent, setCleanContent] = useState('');\n\n  // Effect to clean the HTML content for safe rendering\n  useEffect(() => {\n    setCleanContent(cleanHtmlContent(content));\n  }, [content]);\n\n  // Determine the label for the article type tag\n  const tagLabel = isTechNews ? \"Технические новости\" : isAnnouncement ? \"Анонсы и события\" : \"Сводки новостей\";\n\n  // Render the ArticleCard component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.articleCard,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.articleInfo,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.articleDate,\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: url,\n        className: styles.articleSource,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: sourceName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: styles.articleTitle,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.tag,\n      children: tagLabel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: picture,\n      alt: \"Article\",\n      className: styles.articlePicture\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.articleContent,\n      children: cleanContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.articleFooter,\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: url,\n        className: styles.readMore,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"\\u0427\\u0438\\u0442\\u0430\\u0442\\u044C \\u0432 \\u0438\\u0441\\u0442\\u043E\\u0447\\u043D\\u0438\\u043A\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.wordCount,\n        children: [wordCount, \" \\u0441\\u043B\\u043E\\u0432\\u0430\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(ArticleCard, \"9g9XuxcQboItvzb+SuwN5vbFZ+E=\");\n_c = ArticleCard;\nexport default ArticleCard;\nvar _c;\n$RefreshReg$(_c, \"ArticleCard\");","map":{"version":3,"names":["React","useEffect","useState","styles","cleanHtmlContent","jsxDEV","_jsxDEV","ArticleCard","date","url","sourceName","isTechNews","isAnnouncement","isDigest","title","content","wordCount","picture","_s","cleanContent","setCleanContent","tagLabel","className","articleCard","children","articleInfo","articleDate","fileName","_jsxFileName","lineNumber","columnNumber","href","articleSource","target","rel","articleTitle","tag","src","alt","articlePicture","articleContent","articleFooter","readMore","_c","$RefreshReg$"],"sources":["/Users/vadimvolodin/Downloads/ScanSkillfactory-main/src/pages/ResultsPage/ArticleCard/ArticleCard.jsx"],"sourcesContent":["// ArticleCard.jsx\n/**\n * ArticleCard Component.\n * This component is designed to display an article card with relevant information.\n * It shows the article's date, source, title, content snippet, and an image if provided.\n * The card also displays a tag based on the article type and provides a link to read the full article.\n *\n * @param {string} date - The publication date of the article.\n * @param {string} url - The URL to the full article.\n * @param {string} sourceName - The name of the source of the article.\n * @param {boolean} isTechNews - Flag indicating if the article is technical news.\n * @param {boolean} isAnnouncement - Flag indicating if the article is an announcement.\n * @param {boolean} isDigest - Flag indicating if the article is a digest.\n * @param {string} title - The title of the article.\n * @param {string} content - The HTML content of the article.\n * @param {number} wordCount - The word count of the article.\n * @param {string} picture - The URL to the image associated with the article.\n * @returns {JSX.Element} The ArticleCard component with the article's information.\n */\nimport React, {useEffect, useState} from 'react';\nimport styles from './ArticleCard.module.scss';\nimport {cleanHtmlContent} from '../../../utils/utils';\n\nconst ArticleCard = ({ date, url, sourceName, isTechNews, isAnnouncement, isDigest, title, content, wordCount, picture }) => {\n  const [cleanContent, setCleanContent] = useState('');\n\n  // Effect to clean the HTML content for safe rendering\n  useEffect(() => {\n    setCleanContent(cleanHtmlContent(content));\n  }, [content]);\n\n  // Determine the label for the article type tag\n  const tagLabel = isTechNews ? \"Технические новости\" : isAnnouncement ? \"Анонсы и события\" : \"Сводки новостей\";\n\n  // Render the ArticleCard component\n  return (\n    <div className={styles.articleCard}>\n      {/* Article information with date and source */}\n      <div className={styles.articleInfo}>\n        <span className={styles.articleDate}>{date}</span>\n        <a href={url} className={styles.articleSource} target=\"_blank\" rel=\"noopener noreferrer\">\n          {sourceName}\n        </a>\n      </div>\n      {/* Article title */}\n      <h3 className={styles.articleTitle}>{title}</h3>\n      {/* Article type tag */}\n      <div className={styles.tag}>{tagLabel}</div>\n      {/* Article image */}\n      <img src={picture} alt=\"Article\" className={styles.articlePicture} />\n      {/* Article content snippet */}\n      <p className={styles.articleContent}>{cleanContent}</p>\n      {/* Article footer with link to full article and word count */}\n      <div className={styles.articleFooter}>\n        <a href={url} className={styles.readMore} target=\"_blank\" rel=\"noopener noreferrer\">\n          Читать в источнике\n        </a>\n        <span className={styles.wordCount}>{wordCount} слова</span>\n      </div>\n    </div>\n  );\n};\n\nexport default ArticleCard;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,MAAM,MAAM,2BAA2B;AAC9C,SAAQC,gBAAgB,QAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,WAAW,GAAGA,CAAC;EAAEC,IAAI;EAAEC,GAAG;EAAEC,UAAU;EAAEC,UAAU;EAAEC,cAAc;EAAEC,QAAQ;EAAEC,KAAK;EAAEC,OAAO;EAAEC,SAAS;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC3H,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACAD,SAAS,CAAC,MAAM;IACdmB,eAAe,CAAChB,gBAAgB,CAACW,OAAO,CAAC,CAAC;EAC5C,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;;EAEb;EACA,MAAMM,QAAQ,GAAGV,UAAU,GAAG,qBAAqB,GAAGC,cAAc,GAAG,kBAAkB,GAAG,iBAAiB;;EAE7G;EACA,oBACEN,OAAA;IAAKgB,SAAS,EAAEnB,MAAM,CAACoB,WAAY;IAAAC,QAAA,gBAEjClB,OAAA;MAAKgB,SAAS,EAAEnB,MAAM,CAACsB,WAAY;MAAAD,QAAA,gBACjClB,OAAA;QAAMgB,SAAS,EAAEnB,MAAM,CAACuB,WAAY;QAAAF,QAAA,EAAEhB;MAAI;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAClDxB,OAAA;QAAGyB,IAAI,EAAEtB,GAAI;QAACa,SAAS,EAAEnB,MAAM,CAAC6B,aAAc;QAACC,MAAM,EAAC,QAAQ;QAACC,GAAG,EAAC,qBAAqB;QAAAV,QAAA,EACrFd;MAAU;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAENxB,OAAA;MAAIgB,SAAS,EAAEnB,MAAM,CAACgC,YAAa;MAAAX,QAAA,EAAEV;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEhDxB,OAAA;MAAKgB,SAAS,EAAEnB,MAAM,CAACiC,GAAI;MAAAZ,QAAA,EAAEH;IAAQ;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAE5CxB,OAAA;MAAK+B,GAAG,EAAEpB,OAAQ;MAACqB,GAAG,EAAC,SAAS;MAAChB,SAAS,EAAEnB,MAAM,CAACoC;IAAe;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAErExB,OAAA;MAAGgB,SAAS,EAAEnB,MAAM,CAACqC,cAAe;MAAAhB,QAAA,EAAEL;IAAY;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEvDxB,OAAA;MAAKgB,SAAS,EAAEnB,MAAM,CAACsC,aAAc;MAAAjB,QAAA,gBACnClB,OAAA;QAAGyB,IAAI,EAAEtB,GAAI;QAACa,SAAS,EAAEnB,MAAM,CAACuC,QAAS;QAACT,MAAM,EAAC,QAAQ;QAACC,GAAG,EAAC,qBAAqB;QAAAV,QAAA,EAAC;MAEpF;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJxB,OAAA;QAAMgB,SAAS,EAAEnB,MAAM,CAACa,SAAU;QAAAQ,QAAA,GAAER,SAAS,EAAC,iCAAM;MAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACZ,EAAA,CAtCIX,WAAW;AAAAoC,EAAA,GAAXpC,WAAW;AAwCjB,eAAeA,WAAW;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}